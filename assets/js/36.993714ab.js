(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{487:function(e,t,v){"use strict";v.r(t);var i=v(27),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"移动端适配"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移动端适配"}},[e._v("#")]),e._v(" 移动端适配")]),e._v(" "),v("h2",{attrs:{id:"几个基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#几个基本概念"}},[e._v("#")]),e._v(" 几个基本概念")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("物理像素: (DP)设备屏幕实际拥有的像素点,屏幕的基本单元,是实体,(屏幕分辨率).单位 pt,不同设备的物理像素是不同的,像显示器和打印机就有很大的不同.")]),e._v(" "),v("ul",[v("li",[e._v("pt 在 CSS 单位中属于绝对单位,"),v("code",[e._v("1pt=1/72(inch)")])])])]),e._v(" "),v("li",[v("p",[e._v("逻辑像素: 也叫设备独立像素(DIP),反映在 CSS/JS 程序中的像素点.在浏览器中,window 对象存在一个 devicePixelRatio 属性,表示设备物理像素与设备逻辑像素之间的比例,也就是"),v("code",[e._v("devicePixelRatio=物理像素/逻辑像素")])])]),e._v(" "),v("li",[v("p",[e._v("CSS 像素: 虚拟像素,在 CSS 和 JS 中使用的抽象单位,浏览器中一切长度都以 CSS 像素为单位,单位 px.CSS 像素是一种逻辑像素.")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("px 为一个相对单位,相对的是物理像素,同一台设备,1px 所代表的物理像素可变,不同设备,1px 代表的物理像素也是变化的.")])]),e._v(" "),v("li",[v("p",[e._v("在谈论 CSS 像素时,一定要清楚上下文,即考虑实际环境.")])]),e._v(" "),v("li",[v("p",[e._v("由于不同设备的物理像素不同,浏览器为了使 1px 大小在不同设备上看上去总是差不多,保证阅读体验,会对 CSS 像素进行调节.而浏览器通过定义的"),v("code",[e._v("参考像素(以一臂之遥看96DPI的屏幕时的视角,0.0213度)")]),e._v("来进行换算")])])])]),e._v(" "),v("li",[v("p",[e._v("DPR(device pixels ratio): 设备像素比,用来描述未缩放状态下,物理像素与 CSS 像素间的初始比例关系.在 window 中存在 devicePixelRatio 这个参数.")]),e._v(" "),v("ul",[v("li",[e._v("1px=(dpr)^2*1dp, 表示 1px 由多少物理像素组成,当 DPR 不为 1 时,1px 边框问题就出现了.")])])]),e._v(" "),v("li",[v("p",[e._v("PPI(pixels per inch): 每英寸物理像素个数.")])]),e._v(" "),v("li",[v("p",[e._v("DPI(dots per inch): 每英寸多少个点(墨点),这个参数和打印机有关.")])]),e._v(" "),v("li",[v("p",[e._v("Viewport:")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("layout viewport: 移动设备浏览器布局视口,宽度大于浏览器可视区域的宽度,用于方便展示桌面端网页,通过 document.documentElement.clientWidth 可以获取宽度.")])]),e._v(" "),v("li",[v("p",[e._v("visual viewport: 浏览器可视区域大小,通过 window.innerWidth 可以获取宽度.")])]),e._v(" "),v("li",[v("p",[e._v("ideal viewport: 移动设备的理想 viewport,专为移动设备定制,没有固定尺寸,各个设备各不相同.")])])])])]),e._v(" "),v("h2",{attrs:{id:"控制-viewport"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制-viewport"}},[e._v("#")]),e._v(" 控制 viewport")]),e._v(" "),v("h3",{attrs:{id:"通过-meta-标签控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通过-meta-标签控制"}},[e._v("#")]),e._v(" 通过 meta 标签控制")]),e._v(" "),v("blockquote",[v("p",[e._v("移动设备 viewport 默认为 layout viewport,我们可以通过设置 meta 标签使浏览器 layout viewport 的宽度等于设备宽度,同时不允许用户手动缩放,这样浏览器就不会出现横向滚动条了")])]),e._v(" "),v("p",[v("code",[e._v('<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/>')])]),e._v(" "),v("ul",[v("li",[v("p",[e._v("通过 device-width 可将宽度设置为 ideal viewport 宽度")])]),e._v(" "),v("li",[v("p",[e._v("scale 缩放是相对于 ideal viewport 进行的,缩放值越大,当前 viewport 宽度会越小.")])]),e._v(" "),v("li",[v("p",[e._v("visual viewport 宽度 = ideal viewport 宽度 / 当前缩放值")])]),e._v(" "),v("li",[v("p",[e._v("当前缩放值 = ideal viewport 宽度 / visual viewport 宽度")])])]),e._v(" "),v("h3",{attrs:{id:"媒体查询-media"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#媒体查询-media"}},[e._v("#")]),e._v(" 媒体查询@media")]),e._v(" "),v("blockquote",[v("p",[e._v("@media 参数可以针对不同屏幕尺寸设置不同样式.")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('<link rel="stylesheet" media="(max-width: 800px)" href="example.css" />\n\n<style>\n@media (max-width: 600px) and (orientation: landscape) {\n  body {\n    background-color:red;\n  }\n}\n</style>\n')])])]),v("p",[e._v("简单,调整屏幕宽度不需要刷新;代码量大,不好维护,不能完全适配所有屏幕.")]),e._v(" "),v("h3",{attrs:{id:"vh-和-vw-单位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vh-和-vw-单位"}},[e._v("#")]),e._v(" vh 和 vw 单位")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("vh 相对于 viewport 视口高度(100vh)计算,")])]),e._v(" "),v("li",[v("p",[e._v("vw 相对于 viewport 视口宽度(100vw)计算")])])]),e._v(" "),v("p",[e._v("可能会出现小数点,兼容性较差")]),e._v(" "),v("h3",{attrs:{id:"rem-和-em-单位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rem-和-em-单位"}},[e._v("#")]),e._v(" rem 和 em 单位")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("rem 相对于 html 根元素的 font-size 变化")])]),e._v(" "),v("li",[v("p",[e._v("em 相对于父级 font-size 变化")])])]),e._v(" "),v("p",[e._v("尽管 rem 很好用且自适应页面体验良好,但是在一些需要固定间距的场景下还是会出现问题,需要搭配 px 使用")]),e._v(" "),v("h3",{attrs:{id:"flex-布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局"}},[e._v("#")]),e._v(" flex 布局")]),e._v(" "),v("p",[e._v("flex 布局的特性天然就适合用来做自适应布局,目前以及得到广泛应用.")])])}),[],!1,null,null,null);t.default=a.exports}}]);