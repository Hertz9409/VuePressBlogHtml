(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{523:function(a,t,e){"use strict";e.r(t);var s=e(27),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"前端工程化基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化基础"}},[a._v("#")]),a._v(" 前端工程化基础")]),a._v(" "),e("h2",{attrs:{id:"一切的起源-nodejs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一切的起源-nodejs"}},[a._v("#")]),a._v(" 一切的起源--Nodejs")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("* 2009年,Ryan Dahl基于V8创建了一个轻量级Web服务器并提供了一套库,并在GitHub上发布版本\n* 2011年,发布windows版本的Nodejs\n* 2012年,包管理器NPM作者Isaac Z. Schlueter成为Nodejs主要开发者\n* 目前,Nodejs已经广泛应用于前端后台中间件客户端开发\n")])])]),e("p",[a._v("在浏览器领域,chrome浏览器是当之无愧的第一名,而能够支撑其进行高性能运算,解析和渲染的JavaScript引擎就是V8引擎,并且Google也对该JS解析器进行了开源.于是在V8引擎的基础上,Ryan通过C++编写一些底层的和硬件交互的接口供V8引擎调用,而V8引擎作为Javascript的执行环境,将原本只能在浏览器沙盒环境中运行的代码,搬到了计算机运行环境中,Nodejs就这样诞生了.")]),a._v(" "),e("p",[a._v("Nodejs本质上是一个类似虚拟机的东西,JavaScript在V8引擎中运行,而底层交互则通过C++编写的接口模块实现,这样的特点也促使其通过底层兼容实现了跨平台.")]),a._v(" "),e("p",[a._v("由于使用了V8引擎,Nodejs天然带有Javascript的特点--单线程,在此基础上,Ryan结合JavaScript语言异步回调的特点,实现了底层的异步I/O,从而大幅提高Nodejs执行效率.")]),a._v(" "),e("p",[a._v("于是可得出Nodejs的几个特点: 单线程,异步I/O,事件和回调,跨平台.")]),a._v(" "),e("p",[a._v("Nodejs可以直接在客户端电脑运行JavaScript语言的特点,让前端工程化技术蓬勃发展.")]),a._v(" "),e("h2",{attrs:{id:"javascript语言的发展-es6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript语言的发展-es6"}},[a._v("#")]),a._v(" Javascript语言的发展--ES6")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("经过多年发展,ECMA终于在2015年6月发布,这是一个经历了长达15年讨论的版本.至此,JavaScript不再是一个简单的脚本语言,它也可以进行模块化,可以进行类封装等等Java语言才有的特性(虽然底层实现依然是一种模拟).\n\n在ES6没有发布之前,前端模块化就已经有了很好的发展,像CMD,AMD什么的,有兴趣可以了解一下.\n")])])]),e("p",[a._v("Javascript运行在浏览器沙盒里的特点决定了,浏览器支持什么语法,我们才能使用什么语法.所以ES6发布后,虽然JavaScript编程进入了一个新的领域,但是为了兼容过去的语法和浏览器环境,我们必须想个办法让新的语法能够在老旧的浏览器中依然可以正确运行,即需要对浏览器不支持的语法进行转换,转换成可以正常运行的代码.")]),a._v(" "),e("h2",{attrs:{id:"强大的静态代码分析打包工具的流行-webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强大的静态代码分析打包工具的流行-webpack"}},[a._v("#")]),a._v(" 强大的静态代码分析打包工具的流行--Webpack")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("由于Javascript语言运行在浏览器环境的特性,所以在代码保密方面没有任何优势.其他的编译型语言,可以将代码编译为二进制文件,从而做到代码保护.\n")])])]),e("p",[a._v("程序员在保护JavaScript代码的过程中,也实现了很多的代码混淆和代码压缩工具,最常见的就是glup了.\n通过这些工具,我们可以将可以直接阅读的JavaScript代码转换成一个个的以abcd字符标识的变量和方法,大大增加了其他人从浏览器devtools读取浏览器的难度.")]),a._v(" "),e("p",[a._v("后来,Webpack的出现,它解决了一些glup不能处理的问题,于是迅速流行开来,并成为了最受欢迎的代码分析打包工具,目前热门的vue,react等框架都是默认使用webpack打包.")]),a._v(" "),e("p",[a._v("glup和webpack都是在Nodejs基础上开发的工具,利用了Nodejs可以运行js代码和读取本地文件的特点,实现了工程代码的读取,分析,修改,转译,输出.从而实现代码的打包,优化和转换.")]),a._v(" "),e("h2",{attrs:{id:"nodejs捆绑的包管理工具-npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs捆绑的包管理工具-npm"}},[a._v("#")]),a._v(" Nodejs捆绑的包管理工具--npm")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("JavaScript语言是全球最流行的语言之一,它凭借其简单易上手,获得大家的青睐.同时由于Nodejs的发布,JavaScript语言不再局限于浏览器沙盒,激发了全球开发人员强大的创造力,于是各种各样的基于Nodejs的运行库相继出现,并受到大家的喜欢\n")])])]),e("p",[a._v("由于在Nodejs下运行的运行库或工具包的大量涌现,社区迫切需要一款能够统一管理这些包,可以快捷发布,更新,下载的工具,于是npm应运而生,并且内置在了Nodejs中.")]),a._v(" "),e("p",[a._v("如今,npm上有数百万个第三方软件包,每周都有数亿次的下载,全球的开发人员贡献和下载使用这些工具包,webpack是最流行的软件包之一.并且阿里巴巴也在中国建立了"),e("a",{attrs:{href:"https://registry.npm.taobao.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("淘宝镜像站cnpm"),e("OutboundLink")],1),a._v("来提高中国开发人员的下载速度")]),a._v(" "),e("h2",{attrs:{id:"更进一步-yarn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更进一步-yarn"}},[a._v("#")]),a._v(" 更进一步--yarn")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("就和Javascript语言一样,由于开始设计时候的局限,会存在很多历史遗留问题,而为了解决这些历史问题,又会产生很多新的问题.npm也是如此,面对这些缺陷,yarn出现了,它弥补了很多npm的不足,从何获得广大程序员的喜爱,也促进了npm开发团队解决npm问题的决心,促成了npm5的改进\n")])])]),e("p",[a._v("npm安装模块包的时候速度很慢;同一个项目中,由于package.json文件中版本号的特点,安装时不能保证模块版本一致;安装错误信息难以观察...")]),a._v(" "),e("p",[a._v("很多问题导致程序员苦不堪言,特别是在工程化模块化的今天,排查问题变得更加困难.于是在Facebook,Google等国外互联网巨头的推动下,yarn得到了很好的发展.")]),a._v(" "),e("p",[a._v("相比于npm,yarn有很多优势:")]),a._v(" "),e("ul",[e("li",[a._v("首先就是速度快,yarn通过并行安装的方式加载模块包,并且对已经下载过的包进行缓存,下次下载时直接读取缓存")]),a._v(" "),e("li",[a._v("安装版本统一,yarn通过一个yarn.lock锁定文件来记录被安装模块的确切的版本号,保证每次下载的包版本统一")]),a._v(" "),e("li",[a._v("输出信息简洁")]),a._v(" "),e("li",[a._v("多注册来源处理")]),a._v(" "),e("li",[a._v("更好的语义化")])]),a._v(" "),e("p",[a._v("常用yarn命令:")]),a._v(" "),e("ul",[e("li",[a._v("yarn init -- 初始化项目")]),a._v(" "),e("li",[a._v("yarn add [package]@([verpacksion],[tag]) --dev/peer/optional -- 添加依赖包")]),a._v(" "),e("li",[a._v("yarn upgrade [package]@([verpacksion],[tag]) -- 升级依赖包")]),a._v(" "),e("li",[a._v("yarn remove [package] -- 删除依赖包")]),a._v(" "),e("li",[a._v("yarn (install) -- 安装项目依赖")])]),a._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),e("p",[a._v("至此,前端工程化获得了长足的发展.从Nodejs出现开始,前端程序员拥有了使用JavaScript代码来操作本地数据的能力;而JavaScript语言的进步又催生出大家对代码兼容性,安全性和性能的思考;glup和webpack等代码分析转换打包工具的出现,为前端工程化提供了强有力的支持;npm包管理工具为这个活跃的圈子提供了一个互相交流学习的机会,于是一切就是这么水到渠成.")]),a._v(" "),e("p",[a._v("如今,在Nodejs的帮助下,浏览器端开发,客户端开发,移动端开发,服务器端开发都有了JavaScript的一席之地.")]),a._v(" "),e("h3",{attrs:{id:"任何可以用javascript来写的应用-最终都将用javascript来写-jeff-atwood"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任何可以用javascript来写的应用-最终都将用javascript来写-jeff-atwood"}},[a._v("#")]),a._v(" 任何可以用JavaScript来写的应用，最终都将用JavaScript来写 -- Jeff Atwood")])])}),[],!1,null,null,null);t.default=r.exports}}]);